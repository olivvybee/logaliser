// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Activity {
  id        Int      @id @default(autoincrement())
  timestamp DateTime
  timezone  String?

  coasterActivity CoasterActivity?
  trainActivity   TrainActivity?
}

model CoasterActivity {
  id Int @id @default(autoincrement())

  activity   Activity @relation(fields: [activityId], references: [id])
  activityId Int      @unique

  coaster   Coaster @relation(fields: [coasterId], references: [id])
  coasterId Int

  firstRide  Boolean @default(false)
  inShowExit Boolean @default(false)
}

model TrainActivity {
  id Int @id @default(autoincrement())

  activity   Activity @relation(fields: [activityId], references: [id])
  activityId Int      @unique

  origin          Station  @relation("origin", fields: [originStationId], references: [id])
  originStationId Int
  departureTime   DateTime

  destination          Station?  @relation("destination", fields: [destinationStationId], references: [id])
  destinationStationId Int?
  arrivalTime          DateTime?
}

model ThemePark {
  id        Int    @id @unique
  name      String
  country   String
  latitude  Float?
  longitude Float?

  coasters Coaster[]
}

model Coaster {
  id            Int     @id @unique
  name          String
  opened        String?
  closed        Boolean @default(false)
  latitude      Float?
  longitude     Float?
  make          String?
  model         String?
  type          String?
  design        String?
  length        Float?
  height        Float?
  drop          Float?
  speed         Float?
  verticalAngle Float?
  inversions    Int?
  duration      Int?

  park   ThemePark @relation(fields: [parkId], references: [id])
  parkId Int

  ridden     Boolean   @default(false)
  riddenDate DateTime?

  activities CoasterActivity[]
}

model Station {
  id         Int     @id @default(autoincrement())
  nationalId Int?    @unique
  name       String
  country    String
  code       String?
  latitude   Float?
  longitude  Float?

  originActivities      TrainActivity[] @relation("origin")
  destinationActivities TrainActivity[] @relation("destination")
}
